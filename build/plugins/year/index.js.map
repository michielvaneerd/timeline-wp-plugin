{"version":3,"file":"plugins/year/index.js","mappings":"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","sources":["webpack://mve-timeline/./src/shared/image.js","webpack://mve-timeline/./src/shared/intro.js","webpack://mve-timeline/./src/shared/links.js","webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/external window [\"wp\",\"editPost\"]","webpack://mve-timeline/external window [\"wp\",\"plugins\"]","webpack://mve-timeline/external window [\"wp\",\"richText\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/plugins/year/index.js"],"sourcesContent":["import { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport { __experimentalText as Text, ResponsiveWrapper, Button, TextControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nlet imageId, imageSource, imageInfo, image, _setMeta, _meta = null;\n\nconst updateImageId = (newValue) => {\n    const obj = { ..._meta, mve_timeline_image: newValue ? newValue.id : null, mve_timeline_image_src: newValue ? JSON.stringify(newValue.sizes) : null };\n    if (!newValue) {\n        obj.mve_timeline_image_source = null;\n        obj.mve_timeline_image_info = null;\n        obj.mve_timeline_image_src = null;\n    }\n    _setMeta(obj);\n};\n\nconst updateImageSource = (newValue) => {\n    _setMeta({ ..._meta, mve_timeline_image_source: newValue });\n};\n\nconst updateImageInfo = (newValue) => {\n    _setMeta({ ..._meta, mve_timeline_image_info: newValue });\n};\n\nexport const init = function (meta, setMeta) {\n    _meta = meta;\n    _setMeta = setMeta;\n    imageId = meta['mve_timeline_image'];\n    imageSource = meta['mve_timeline_image_source'] ?? '';\n    imageInfo = meta['mve_timeline_image_info'] ?? '';\n    image = useSelect((select) => select('core').getMedia(imageId), [imageId]);\n};\n\nexport const Widget = function () {\n    return (\n        <MediaUploadCheck>\n            <Text upperCase={true}>Image</Text>\n            <MediaUpload\n                onSelect={updateImageId}\n                allowedTypes={['image']}\n                value={imageId}\n                render={({ open }) => (<>\n                    {image && <div style={{ display: 'block' }}><ResponsiveWrapper naturalWidth={image.media_details.width}\n                        naturalHeight={image.media_details.height}><img src={image.source_url} /></ResponsiveWrapper></div>}\n                    <div style={{ display: 'block' }}>\n                        {!image && <Button variant=\"secondary\" onClick={open}>Open Media Library</Button>}\n                        {image && <Button onClick={() => updateImageId(null)} isLink isDestructive>Remove image</Button>}\n                    </div>\n\n                </>\n                )}\n            />\n            {image && <TextControl value={imageSource} onChange={updateImageSource} label=\"Source\" />}\n            {image && <TextControl value={imageInfo} onChange={updateImageInfo} label=\"Info\" />}\n        </MediaUploadCheck>\n    );\n};","import { RichText } from '@wordpress/block-editor';\n\nlet _meta, _setMeta, metaFieldValue = null;\n\nconst updateMetaValue = (newValue) => {\n    _setMeta({ ..._meta, mve_timeline_intro: newValue });\n};\n\nexport const init = function (meta, setMeta) {\n    _meta = meta;\n    _setMeta = setMeta;\n    metaFieldValue = meta['mve_timeline_intro'];\n};\n\nexport const Widget = function () {\n    return (\n        <RichText\n            placeholder=\"Intro...\"\n            allowedFormats={['core/bold', 'core/italic', 'mve-timeline/internal-link']}\n            label=\"MVE Timeline Intro\"\n            value={metaFieldValue}\n            onChange={updateMetaValue}\n            style={{ backgroundColor: 'white', padding: '1rem', border: '1px solid #C0C0C0' }}\n        />\n    );\n}","import { useState } from 'react';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { __experimentalText as Text, TextControl, Button, Card, CardBody, CardHeader, __experimentalHeading as Heading } from '@wordpress/components'\n\nlet _meta, _setMeta, metaFieldValue = null;\n\nexport const init = function (meta, setMeta) {\n    _meta = meta;\n    _setMeta = setMeta;\n    metaFieldValue = meta['mve_timeline_links'];\n    if (!metaFieldValue) {\n        metaFieldValue = [];\n    } else {\n        metaFieldValue = JSON.parse(metaFieldValue); // [{\"name\": \"\", \"url\": \"\"}]\n    }\n};\n\nexport const Widget = function () {\n\n    const [valueName, setValueName] = useState('');\n    const [valueUrl, setValueUrl] = useState('');\n\n    const addMetaValue = () => {\n        metaFieldValue.push({\n            name: valueName,\n            url: valueUrl\n        });\n        _setMeta({ ..._meta, mve_timeline_links: JSON.stringify(metaFieldValue) });\n        setValueName('');\n        setValueUrl('');\n    };\n\n    const removeLink = (valueToRemove) => {\n        const newMetaFieldValue = [];\n        for (const val of metaFieldValue) {\n            if (val.name === valueToRemove.name && val.url === valueToRemove.url) {\n\n            } else {\n                newMetaFieldValue.push(val);\n            }\n        }\n        _setMeta({ ..._meta, mve_timeline_links: JSON.stringify(newMetaFieldValue) });\n    };\n\n    return (\n        <><ul style={{ overflowX: 'auto', listStyleType: 'none', padding: 0, margin: 0, marginBottom: '1rem' }}>\n            {metaFieldValue.map((link) => (\n                <li key={link.url} style={{ whiteSpace: 'nowrap' }}><Button isDestructive size=\"small\" onClick={() => removeLink(link)}>X</Button> {link.name} - {link.url}</li>\n            ))}\n        </ul>\n\n            <TextControl value={valueName} onChange={(newValue) => setValueName(newValue)} label=\"Title\" />\n            <TextControl value={valueUrl} onChange={(newValue) => setValueUrl(newValue)} label=\"URL\" />\n            <Button size=\"small\" variant=\"secondary\" onClick={addMetaValue} disabled={!(valueName && valueUrl)}>Add link</Button></>\n    );\n};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { PanelRow, TextControl, SelectControl, Button, __experimentalText as Text, __experimentalVStack as VStack, __experimentalHStack as HStack, ToolbarButton, Popover, Card, CardBody, CheckboxControl } from '@wordpress/components';\nimport { useSelect, useDispatch, subscribe, select, dispatch } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { BlockControls, RichText } from '@wordpress/block-editor';\nimport { registerFormatType, toggleFormat, applyFormat } from '@wordpress/rich-text';\nimport { useState } from 'react';\nimport { init as initImage, Widget as ImageWidget } from '../../shared/image.js';\nimport { init as initLinks, Widget as LinksWidget } from '../../shared/links.js';\nimport { init as initIntro, Widget as IntroWidget } from '../../shared/intro.js';\n\nwp.domReady(() => {\n    let locked = false;\n    subscribe(() => {\n        const requiredMeta = select('core/editor').getEditedPostAttribute('meta');\n        const tag = select('core/editor').getEditedPostAttribute('mve_timeline');\n        if (requiredMeta && tag) {\n            if (!requiredMeta.mve_timeline_year || tag.length === 0) {\n                if (!locked) {\n                    locked = true;\n                    dispatch('core/editor').lockPostSaving('requiredValueLock');\n                }\n            } else {\n                if (locked) {\n                    locked = false;\n                    dispatch('core/editor').unlockPostSaving('requiredValueLock');\n                }\n            }\n        }\n    });\n});\n\nregisterPlugin('mve-timeline', {\n    render: function () {\n\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n\n        const postId = useSelect(\n            (select) => select('core/editor').getCurrentPostId(),\n            []\n        );\n\n        const { editEntityRecord } = useDispatch('core');\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        initImage(meta, setMeta);\n        initLinks(meta, setMeta);\n        initIntro(meta, setMeta);\n\n        const valueYear = meta['mve_timeline_year'] ?? '';\n        const valueYearEnd = meta['mve_timeline_year_end'] ?? '';\n\n        const updateYear = (newValue) => {\n            if (newValue === '') {\n                setMeta({ ...meta, mve_timeline_year: null });\n            } else {\n                newValue = parseInt(newValue, 10);\n                setMeta({ ...meta, mve_timeline_year: !isNaN(newValue) ? newValue.toString() : null });\n            }\n        };\n\n        const updateYearEnd = (newValue) => {\n            if (newValue === '') {\n                setMeta({ ...meta, mve_timeline_year_end: null });\n            } else {\n                newValue = parseInt(newValue, 10);\n                setMeta({ ...meta, mve_timeline_year_end: !isNaN(newValue) ? newValue.toString() : null });\n            }\n        };\n\n        const hasContent = meta['mve_timeline_content'] ?? false;\n\n        const updateHasContent = (newValue) => {\n            setMeta({ ...meta, mve_timeline_content: newValue });\n        };\n\n        const tags = useSelect((select) => {\n            return select('core').getEntityRecords('taxonomy', 'mve_timeline', { orderBy: 'name', 'order': 'asc', 'per_page': -1 }); // name and slug\n        });\n\n        const currentTags = useSelect(\n            (select) => select('core/editor').getEditedPostAttribute('mve_timeline'),\n            []\n        );\n\n        function updateTimeline(value) {\n            value = parseInt(value, 10);\n            editEntityRecord('postType', 'mve_timeline_item', postId, {\n                'mve_timeline': !isNaN(value) ? [parseInt(value, 10)] : []\n            });\n        }\n\n        const options = [{\n            value: null,\n            label: 'Timeline...'\n        }, ...(tags ? tags.map((tag) => {\n            return {\n                value: tag.id,\n                label: tag.name\n            };\n        }) : [])];\n\n        const panelStyle = {\n            backgroundColor: '#F3F3F3', padding: '.4rem', width: '100%'\n        };\n\n        const requiredMissingStyle = {\n            backgroundColor: 'red',\n            color: 'white'\n        };\n\n        return (\n            <PluginDocumentSettingPanel title=\"MVE Timeline\" initialOpen={true} name=\"mve_timeline_panel\">\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <HStack>\n                            <TextControl style={!valueYear ? requiredMissingStyle : null} onChange={updateYear} value={valueYear} label=\"Year start\" />\n                            <TextControl onChange={updateYearEnd} value={valueYearEnd} label=\"Year end\" />\n                        </HStack>\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <SelectControl style={(!currentTags || currentTags.length === 0) ? requiredMissingStyle : null} label=\"Timeline\" options={options} onChange={updateTimeline} value={currentTags ? currentTags[0] : ''} />\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <CheckboxControl\n                            label=\"Has content\"\n                            checked={hasContent}\n                            onChange={updateHasContent}\n                        />\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <VStack>\n                            <ImageWidget />\n                        </VStack>\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <VStack>\n                            <Text upperCase={true}>Intro</Text>\n                            <IntroWidget />\n                        </VStack>\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <VStack>\n                            <Text upperCase={true}>Links</Text>\n                            <LinksWidget />\n                        </VStack>\n                    </div>\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n        );\n    }\n});\n\nconst MyPageList = ({ pages, onChange, value }) => {\n    return <SelectControl style={{ minWidth: '300px' }} __nextHasNoMarginBottom value={value} label=\"Select page\" onChange={onChange} options={pages.map(function (page) {\n        return { value: page.id, label: `${page.meta.mve_timeline_year} - ${page.title.raw}` };\n    })} />\n};\n\nconst MyCustomButton = ({ isActive, onChange, value, activeAttributes, contentRef }) => {\n\n    const [popoverAnchor, setPopoverAnchor] = useState(contentRef.current);\n    const allowedBlocks = ['core/paragraph', 'mve-timeline/intro'];\n\n    const postId = useSelect(\n        (select) => select('core/editor').getCurrentPostId(),\n        []\n    );\n\n    const selectedBlock = useSelect((select) => {\n        return select('core/block-editor').getSelectedBlock();\n    }, []);\n\n    if (selectedBlock && !allowedBlocks.includes(selectedBlock.name)) {\n        return null;\n    }\n\n    const currentTags = useSelect(\n        (select) => select('core/editor').getEditedPostAttribute('mve_timeline'),\n        []\n    );\n\n    const pages = useSelect((select) => {\n        return select('core').getEntityRecords('postType', 'mve_timeline_item', currentTags && postId ? {\n            'mve_timeline': currentTags,\n            'exclude': [postId]\n        } : {});\n    }, [currentTags, postId]);\n\n    return (\n        <BlockControls>\n            <ToolbarButton\n                icon=\"admin-links\"\n                title=\"Internal link\"\n                onClick={() => {\n                    onChange(\n                        toggleFormat(value, {\n                            type: 'mve-timeline/internal-link',\n                        })\n                    );\n                }}\n                isActive={isActive}\n            />\n            {isActive && pages && <Popover anchor={popoverAnchor} variant=\"toolbar\"><Card><CardBody>\n                <MyPageList pages={pages} value={activeAttributes?.name} onChange={(newValue) => {\n                    const changed = applyFormat(value, {\n                        type: 'mve-timeline/internal-link',\n                        attributes: {\n                            name: newValue\n                        }\n                    });\n                    onChange(changed);\n                }} />\n            </CardBody></Card>\n            </Popover>}\n        </BlockControls>\n    );\n};\n\n// const MyCustomButton2 = ({ isActive, onChange, value, activeAttributes }) => {\n\n//     const selectedBlock = useSelect((select) => {\n//         return select('core/block-editor').getSelectedBlock();\n//     }, []);\n\n//     if (selectedBlock && selectedBlock.name !== 'core/paragraph') {\n//         return null;\n//     }\n\n//     console.log(selectedBlock.name);\n\n//     return (\n//         <BlockControls>\n//             <ToolbarButton\n//                 icon=\"editor-code\"\n//                 title=\"Sample output\"\n//                 onClick={() => {\n//                     onChange(\n//                         toggleFormat(value, {\n//                             type: 'my-custom-format/sample-output',\n//                         })\n//                     );\n//                 }}\n//                 isActive={isActive}\n//             />\n//             {isActive && <Popover variant=\"toolbar\">\n//                 <URLInput value={activeAttributes.name ?? ''} onChange={(url, post) => {\n//                     const newVal = applyFormat(value, {\n//                         type: 'my-custom-format/sample-output',\n//                         attributes: {\n//                             name: url\n//                         }\n//                     });\n//                     console.log(newVal);\n//                     console.log(url);\n//                     console.log(post);\n//                     onChange(newVal);\n//                 }} />\n//             </Popover>}\n//         </BlockControls>\n//     );\n// };\n\nregisterFormatType('mve-timeline/internal-link', {\n    title: 'Internal link',\n    tagName: 'a',\n    className: 'mve-internal-link',\n    attributes: {\n        name: 'data-internal-id',\n    },\n    edit: MyCustomButton\n});\n\n//addFilter('editor.BlockEdit', 'mve-timeline/link', InternalLink);"],"names":["MediaUpload","MediaUploadCheck","__experimentalText","Text","ResponsiveWrapper","Button","TextControl","useSelect","imageId","imageSource","imageInfo","image","_setMeta","_meta","updateImageId","newValue","obj","mve_timeline_image","id","mve_timeline_image_src","JSON","stringify","sizes","mve_timeline_image_source","mve_timeline_image_info","updateImageSource","updateImageInfo","init","meta","setMeta","_meta$mve_timeline_im","_meta$mve_timeline_im2","select","getMedia","Widget","createElement","upperCase","onSelect","allowedTypes","value","render","open","Fragment","style","display","naturalWidth","media_details","width","naturalHeight","height","src","source_url","variant","onClick","isLink","isDestructive","onChange","label","RichText","metaFieldValue","updateMetaValue","mve_timeline_intro","placeholder","allowedFormats","backgroundColor","padding","border","useState","useEntityProp","useBlockProps","Card","CardBody","CardHeader","__experimentalHeading","Heading","parse","valueName","setValueName","valueUrl","setValueUrl","addMetaValue","push","name","url","mve_timeline_links","removeLink","valueToRemove","newMetaFieldValue","val","overflowX","listStyleType","margin","marginBottom","map","link","key","whiteSpace","size","disabled","registerPlugin","PluginDocumentSettingPanel","PanelRow","SelectControl","__experimentalVStack","VStack","__experimentalHStack","HStack","ToolbarButton","Popover","CheckboxControl","useDispatch","subscribe","dispatch","BlockControls","registerFormatType","toggleFormat","applyFormat","initImage","ImageWidget","initLinks","LinksWidget","initIntro","IntroWidget","wp","domReady","locked","requiredMeta","getEditedPostAttribute","tag","mve_timeline_year","length","lockPostSaving","unlockPostSaving","_meta$mve_timeline_ye","_meta$mve_timeline_ye2","_meta$mve_timeline_co","postType","getCurrentPostType","postId","getCurrentPostId","editEntityRecord","valueYear","valueYearEnd","updateYear","parseInt","isNaN","toString","updateYearEnd","mve_timeline_year_end","hasContent","updateHasContent","mve_timeline_content","tags","getEntityRecords","orderBy","currentTags","updateTimeline","options","panelStyle","requiredMissingStyle","color","title","initialOpen","checked","MyPageList","pages","minWidth","__nextHasNoMarginBottom","page","raw","MyCustomButton","isActive","activeAttributes","contentRef","popoverAnchor","setPopoverAnchor","current","allowedBlocks","selectedBlock","getSelectedBlock","includes","icon","type","anchor","changed","attributes","tagName","className","edit"],"sourceRoot":""}