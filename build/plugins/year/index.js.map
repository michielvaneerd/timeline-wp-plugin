{"version":3,"file":"plugins/year/index.js","mappings":"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","sources":["webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/external window [\"wp\",\"editPost\"]","webpack://mve-timeline/external window [\"wp\",\"plugins\"]","webpack://mve-timeline/external window [\"wp\",\"richText\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/plugins/year/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { PanelRow, TextControl, SelectControl, Button, ResponsiveWrapper, __experimentalText as Text, __experimentalVStack as VStack, ToolbarButton, Popover, Card, CardBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { MediaUpload, MediaUploadCheck, BlockControls } from '@wordpress/block-editor';\nimport { registerFormatType, toggleFormat, applyFormat } from '@wordpress/rich-text';\nimport { useState } from 'react';\n\n\n\nregisterPlugin('mve-timeline', {\n    render: function () {\n\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n\n        const postId = useSelect(\n            (select) => select('core/editor').getCurrentPostId(),\n            []\n        );\n\n        const { editEntityRecord } = useDispatch('core');\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        console.log(meta);\n\n        const year = meta['mve_timeline_year'];\n        const imageId = meta['mve_timeline_image'];\n\n        const updateYear = (newValue) => {\n            newValue = parseInt(newValue, 10);\n            setMeta({ ...meta, mve_timeline_year: !isNaN(newValue) ? newValue : 0 });\n        };\n\n        const updateImageId = (newValue) => {\n            setMeta({ ...meta, mve_timeline_image: newValue ? newValue.id : null });\n        };\n\n        const tags = useSelect((select) => {\n            return select('core').getEntityRecords('taxonomy', 'mve_timeline', { orderBy: 'name', 'order': 'asc', 'per_page': -1 }); // name and slug\n        });\n\n        const currentTags = useSelect(\n            (select) => select('core/editor').getEditedPostAttribute('mve_timeline'),\n            []\n        );\n\n        function onChange(value) {\n            value = parseInt(value, 10);\n            editEntityRecord('postType', 'mve_timeline_item', postId, {\n                'mve_timeline': !isNaN(value) ? [parseInt(value, 10)] : [0]\n            });\n        }\n\n        const image = useSelect((select) => select('core').getMedia(imageId), [imageId]);\n\n        const options = [{\n            value: 0,\n            label: 'Choose timeline...'\n        }].concat(tags ? tags.map((tag) => {\n            return {\n                value: tag.id,\n                label: tag.name\n            };\n        }) : []);\n\n        return (\n            <PluginDocumentSettingPanel title=\"MVE Timeline\" initialOpen={true}>\n\n                <PanelRow>\n                    <TextControl\n                        label=\"MVE Timeline Year\"\n                        value={year}\n                        onChange={updateYear}\n                    />\n                </PanelRow>\n                <PanelRow>\n                    <SelectControl label=\"Timeline\" options={options} onChange={onChange} value={currentTags ? currentTags[0] : ''} />\n                </PanelRow>\n                <PanelRow><VStack>\n                    <MediaUploadCheck>\n                        <div style={{ display: 'block' }}><Text upperCase={true}>Image</Text></div>\n\n                        <MediaUpload\n                            onSelect={updateImageId}\n                            allowedTypes={['image']}\n                            value={imageId}\n                            render={({ open }) => (<>\n                                {image && <div style={{ display: 'block' }}><ResponsiveWrapper naturalWidth={image.media_details.width}\n                                    naturalHeight={image.media_details.height}><img src={image.source_url} /></ResponsiveWrapper></div>}\n                                <div style={{ display: 'block' }}>\n                                    {!image && <Button variant=\"secondary\" onClick={open}>Open Media Library</Button>}\n                                    {image && <Button onClick={() => updateImageId(null)} isLink isDestructive>Remove image</Button>}\n                                </div>\n\n                            </>\n                            )}\n                        />\n\n                    </MediaUploadCheck>\n                </VStack></PanelRow>\n\n\n            </PluginDocumentSettingPanel>\n        );\n    }\n});\n\nconst MyPageList = ({ pages, onChange, value }) => {\n    return <SelectControl style={{ minWidth: '300px' }} __nextHasNoMarginBottom value={value} label=\"Select page\" onChange={onChange} options={pages.map(function (page) {\n        return { value: page.id, label: `${page.meta.mve_timeline_year} - ${page.title.raw}` };\n    })} />\n};\n\nconst MyCustomButton = ({ isActive, onChange, value, activeAttributes, contentRef }) => {\n\n    const [popoverAnchor, setPopoverAnchor] = useState(contentRef.current);\n    const allowedBlocks = ['core/paragraph', 'mve-timeline/intro'];\n\n    const postId = useSelect(\n        (select) => select('core/editor').getCurrentPostId(),\n        []\n    );\n\n    const selectedBlock = useSelect((select) => {\n        return select('core/block-editor').getSelectedBlock();\n    }, []);\n\n    if (selectedBlock && !allowedBlocks.includes(selectedBlock.name)) {\n        return null;\n    }\n\n    const currentTags = useSelect(\n        (select) => select('core/editor').getEditedPostAttribute('mve_timeline'),\n        []\n    );\n\n    const pages = useSelect((select) => {\n        return select('core').getEntityRecords('postType', 'mve_timeline_item', currentTags && postId ? {\n            'mve_timeline': currentTags,\n            'exclude': [postId]\n        } : {});\n    }, [currentTags, postId]);\n\n    return (\n        <BlockControls>\n            <ToolbarButton\n                icon=\"admin-links\"\n                title=\"Internal link\"\n                onClick={() => {\n                    onChange(\n                        toggleFormat(value, {\n                            type: 'mve-timeline/internal-link',\n                        })\n                    );\n                }}\n                isActive={isActive}\n            />\n            {isActive && pages && <Popover anchor={popoverAnchor} variant=\"toolbar\"><Card><CardBody>\n                <MyPageList pages={pages} value={activeAttributes?.name} onChange={(newValue) => {\n                    const changed = applyFormat(value, {\n                        type: 'mve-timeline/internal-link',\n                        attributes: {\n                            name: newValue\n                        }\n                    });\n                    onChange(changed);\n                }} />\n            </CardBody></Card>\n            </Popover>}\n        </BlockControls>\n    );\n};\n\n// const MyCustomButton2 = ({ isActive, onChange, value, activeAttributes }) => {\n\n//     const selectedBlock = useSelect((select) => {\n//         return select('core/block-editor').getSelectedBlock();\n//     }, []);\n\n//     if (selectedBlock && selectedBlock.name !== 'core/paragraph') {\n//         return null;\n//     }\n\n//     console.log(selectedBlock.name);\n\n//     return (\n//         <BlockControls>\n//             <ToolbarButton\n//                 icon=\"editor-code\"\n//                 title=\"Sample output\"\n//                 onClick={() => {\n//                     onChange(\n//                         toggleFormat(value, {\n//                             type: 'my-custom-format/sample-output',\n//                         })\n//                     );\n//                 }}\n//                 isActive={isActive}\n//             />\n//             {isActive && <Popover variant=\"toolbar\">\n//                 <URLInput value={activeAttributes.name ?? ''} onChange={(url, post) => {\n//                     const newVal = applyFormat(value, {\n//                         type: 'my-custom-format/sample-output',\n//                         attributes: {\n//                             name: url\n//                         }\n//                     });\n//                     console.log(newVal);\n//                     console.log(url);\n//                     console.log(post);\n//                     onChange(newVal);\n//                 }} />\n//             </Popover>}\n//         </BlockControls>\n//     );\n// };\n\nregisterFormatType('mve-timeline/internal-link', {\n    title: 'Internal link',\n    tagName: 'a',\n    className: 'mve-internal-link',\n    attributes: {\n        name: 'data-internal-id',\n    },\n    edit: MyCustomButton\n});\n\n//addFilter('editor.BlockEdit', 'mve-timeline/link', InternalLink);"],"names":["registerPlugin","PluginDocumentSettingPanel","PanelRow","TextControl","SelectControl","Button","ResponsiveWrapper","__experimentalText","Text","__experimentalVStack","VStack","ToolbarButton","Popover","Card","CardBody","useSelect","useDispatch","useEntityProp","MediaUpload","MediaUploadCheck","BlockControls","registerFormatType","toggleFormat","applyFormat","useState","render","postType","select","getCurrentPostType","postId","getCurrentPostId","editEntityRecord","meta","setMeta","console","log","year","imageId","updateYear","newValue","parseInt","mve_timeline_year","isNaN","updateImageId","mve_timeline_image","id","tags","getEntityRecords","orderBy","currentTags","getEditedPostAttribute","onChange","value","image","getMedia","options","label","concat","map","tag","name","createElement","title","initialOpen","style","display","upperCase","onSelect","allowedTypes","open","Fragment","naturalWidth","media_details","width","naturalHeight","height","src","source_url","variant","onClick","isLink","isDestructive","MyPageList","pages","minWidth","__nextHasNoMarginBottom","page","raw","MyCustomButton","isActive","activeAttributes","contentRef","popoverAnchor","setPopoverAnchor","current","allowedBlocks","selectedBlock","getSelectedBlock","includes","icon","type","anchor","changed","attributes","tagName","className","edit"],"sourceRoot":""}