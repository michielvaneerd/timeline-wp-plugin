{"version":3,"file":"plugins/year/index.js","mappings":"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","sources":["webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/external window [\"wp\",\"editPost\"]","webpack://mve-timeline/external window [\"wp\",\"plugins\"]","webpack://mve-timeline/external window [\"wp\",\"richText\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/plugins/year/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { PanelRow, TextControl, SelectControl, Button, ResponsiveWrapper, __experimentalText as Text, __experimentalVStack as VStack, __experimentalHStack as HStack, ToolbarButton, Popover, Card, CardBody, CheckboxControl } from '@wordpress/components';\nimport { useSelect, useDispatch, subscribe, select, dispatch } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { MediaUpload, MediaUploadCheck, BlockControls, RichText } from '@wordpress/block-editor';\nimport { registerFormatType, toggleFormat, applyFormat } from '@wordpress/rich-text';\nimport { useState } from 'react';\n\n\nwp.domReady(() => {\n    let locked = false;\n    subscribe(() => {\n        const requiredMeta = select('core/editor').getEditedPostAttribute('meta');\n        const tag = select('core/editor').getEditedPostAttribute('mve_timeline');\n        if (requiredMeta && tag) {\n            if (!requiredMeta.mve_timeline_year || tag.length === 0) {\n                if (!locked) {\n                    locked = true;\n                    dispatch('core/editor').lockPostSaving('requiredValueLock');\n                }\n            } else {\n                if (locked) {\n                    locked = false;\n                    dispatch('core/editor').unlockPostSaving('requiredValueLock');\n                }\n            }\n        }\n    });\n});\n\nregisterPlugin('mve-timeline', {\n    render: function () {\n\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n\n        const postId = useSelect(\n            (select) => select('core/editor').getCurrentPostId(),\n            []\n        );\n\n        const { editEntityRecord } = useDispatch('core');\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        const [linkName, setLinkName] = useState('');\n        const [linkUrl, setLinkUrl] = useState('');\n\n        const valueYear = meta['mve_timeline_year'] ?? '';\n        const valueYearEnd = meta['mve_timeline_year_end'] ?? '';\n\n        const updateYear = (newValue) => {\n            if (newValue === '') {\n                setMeta({ ...meta, mve_timeline_year: null });\n            } else {\n                newValue = parseInt(newValue, 10);\n                setMeta({ ...meta, mve_timeline_year: !isNaN(newValue) ? newValue.toString() : null });\n            }\n        };\n\n        const updateYearEnd = (newValue) => {\n            if (newValue === '') {\n                setMeta({ ...meta, mve_timeline_year_end: null });\n            } else {\n                newValue = parseInt(newValue, 10);\n                setMeta({ ...meta, mve_timeline_year_end: !isNaN(newValue) ? newValue.toString() : null });\n            }\n        };\n\n        const imageId = meta['mve_timeline_image'];\n        const imageSource = meta['mve_timeline_image_source'] ?? '';\n        const imageInfo = meta['mve_timeline_image_info'] ?? '';\n        const intro = meta['mve_timeline_intro'];\n        const hasContent = meta['mve_timeline_content'] ?? false;\n        let links = meta['mve_timeline_links'];\n        if (!links) {\n            links = [];\n        } else {\n            links = JSON.parse(links); // [{\"name\": \"\", \"url\": \"\"}]\n        }\n        const addLink = () => {\n            links.push({\n                name: linkName,\n                url: linkUrl\n            });\n            setMeta({ ...meta, mve_timeline_links: JSON.stringify(links) });\n            setLinkName('');\n            setLinkUrl('');\n        };\n        const removeLink = (valueToRemove) => {\n            const newLinks = [];\n            for (const val of links) {\n                if (val.name === valueToRemove.name && val.url === valueToRemove.url) {\n\n                } else {\n                    newLinks.push(val);\n                }\n            }\n            setMeta({ ...meta, mve_timeline_links: JSON.stringify(newLinks) });\n        };\n\n\n        const updateIntro = (newValue) => {\n            setMeta({ ...meta, mve_timeline_intro: newValue });\n        };\n\n        const updateImageId = (newValue) => {\n            const obj = { ...meta, mve_timeline_image: newValue ? newValue.id : null, mve_timeline_image_src: newValue ? JSON.stringify(newValue.sizes) : null };\n            if (!newValue) {\n                obj.mve_timeline_image_source = null;\n                obj.mve_timeline_image_info = null;\n                obj.mve_timeline_image_src = null;\n            }\n            setMeta(obj);\n        };\n\n        const updateImageSource = (newValue) => {\n            setMeta({ ...meta, mve_timeline_image_source: newValue });\n        };\n\n        const updateImageInfo = (newValue) => {\n            setMeta({ ...meta, mve_timeline_image_info: newValue });\n        };\n\n        const updateHasContent = (newValue) => {\n            setMeta({ ...meta, mve_timeline_content: newValue });\n        };\n\n        const tags = useSelect((select) => {\n            return select('core').getEntityRecords('taxonomy', 'mve_timeline', { orderBy: 'name', 'order': 'asc', 'per_page': -1 }); // name and slug\n        });\n\n        const currentTags = useSelect(\n            (select) => select('core/editor').getEditedPostAttribute('mve_timeline'),\n            []\n        );\n\n        function updateTimeline(value) {\n            value = parseInt(value, 10);\n            editEntityRecord('postType', 'mve_timeline_item', postId, {\n                'mve_timeline': !isNaN(value) ? [parseInt(value, 10)] : []\n            });\n        }\n\n        const image = useSelect((select) => select('core').getMedia(imageId), [imageId]);\n\n        const options = [{\n            value: null,\n            label: 'Timeline...'\n        }, ...(tags ? tags.map((tag) => {\n            return {\n                value: tag.id,\n                label: tag.name\n            };\n        }) : [])];\n\n        const panelStyle = {\n            backgroundColor: '#F3F3F3', padding: '.4rem', width: '100%'\n        };\n\n        const requiredMissingStyle = {\n            backgroundColor: 'red',\n            color: 'white'\n        };\n\n        return (\n            <PluginDocumentSettingPanel title=\"MVE Timeline\" initialOpen={true} name=\"mve_timeline_panel\">\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <HStack>\n                            <TextControl style={!valueYear ? requiredMissingStyle : null} onChange={updateYear} value={valueYear} label=\"Year start\" />\n                            <TextControl onChange={updateYearEnd} value={valueYearEnd} label=\"Year end\" />\n                        </HStack>\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <SelectControl style={(!currentTags || currentTags.length === 0) ? requiredMissingStyle : null} label=\"Timeline\" options={options} onChange={updateTimeline} value={currentTags ? currentTags[0] : ''} />\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <CheckboxControl\n                            label=\"Has content\"\n                            checked={hasContent}\n                            onChange={updateHasContent}\n                        />\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <VStack>\n                            <MediaUploadCheck>\n                                <Text upperCase={true}>Image</Text>\n                                <MediaUpload\n                                    onSelect={updateImageId}\n                                    allowedTypes={['image']}\n                                    value={imageId}\n                                    render={({ open }) => (<>\n                                        {image && <div style={{ display: 'block' }}><ResponsiveWrapper naturalWidth={image.media_details.width}\n                                            naturalHeight={image.media_details.height}><img src={image.source_url} /></ResponsiveWrapper></div>}\n                                        <div style={{ display: 'block' }}>\n                                            {!image && <Button variant=\"secondary\" onClick={open}>Open Media Library</Button>}\n                                            {image && <Button onClick={() => updateImageId(null)} isLink isDestructive>Remove image</Button>}\n                                        </div>\n\n                                    </>\n                                    )}\n                                />\n                                {image && <TextControl value={imageSource} onChange={updateImageSource} label=\"Source\" />}\n                                {image && <TextControl value={imageInfo} onChange={updateImageInfo} label=\"Info\" />}\n                            </MediaUploadCheck>\n                        </VStack>\n                    </div>\n                </PanelRow>\n                <PanelRow>\n                <div style={panelStyle}><VStack>\n                <Text upperCase={true}>Intro</Text>\n                    <RichText style={{backgroundColor: 'white'}}\n                        placeholder=\"Intro...\"\n                        allowedFormats={['core/bold', 'core/italic', 'mve-timeline/internal-link']}\n                        label=\"MVE Timeline Intro\"\n                        value={intro}\n                        onChange={updateIntro}\n                    />\n                    </VStack></div>\n                </PanelRow>\n                <PanelRow>\n                    <div style={panelStyle}>\n                        <VStack>\n                            <Text upperCase={true}>Links</Text>\n                            <ul style={{ overflowX: 'auto', listStyleType: 'none', padding: 0, margin: 0 }}>\n                                {links.map((link) => (\n                                    <li key={link.url} style={{whiteSpace: 'nowrap'}}><Button isDestructive size=\"small\" onClick={() => removeLink(link)}>X</Button> {link.name} - {link.url}</li>\n                                ))}\n                            </ul>\n                            <TextControl value={linkName} onChange={(newValue) => setLinkName(newValue)} label=\"Title\" />\n                            <TextControl value={linkUrl} onChange={(newValue) => setLinkUrl(newValue)} label=\"URL\" />\n                            <Button size=\"small\" variant=\"secondary\" onClick={addLink} disabled={!(linkName && linkUrl)}>Add link</Button>\n                        </VStack>\n                    </div>\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n        );\n    }\n});\n\nconst MyPageList = ({ pages, onChange, value }) => {\n    return <SelectControl style={{ minWidth: '300px' }} __nextHasNoMarginBottom value={value} label=\"Select page\" onChange={onChange} options={pages.map(function (page) {\n        return { value: page.id, label: `${page.meta.mve_timeline_year} - ${page.title.raw}` };\n    })} />\n};\n\nconst MyCustomButton = ({ isActive, onChange, value, activeAttributes, contentRef }) => {\n\n    const [popoverAnchor, setPopoverAnchor] = useState(contentRef.current);\n    const allowedBlocks = ['core/paragraph', 'mve-timeline/intro'];\n\n    const postId = useSelect(\n        (select) => select('core/editor').getCurrentPostId(),\n        []\n    );\n\n    const selectedBlock = useSelect((select) => {\n        return select('core/block-editor').getSelectedBlock();\n    }, []);\n\n    if (selectedBlock && !allowedBlocks.includes(selectedBlock.name)) {\n        return null;\n    }\n\n    const currentTags = useSelect(\n        (select) => select('core/editor').getEditedPostAttribute('mve_timeline'),\n        []\n    );\n\n    const pages = useSelect((select) => {\n        return select('core').getEntityRecords('postType', 'mve_timeline_item', currentTags && postId ? {\n            'mve_timeline': currentTags,\n            'exclude': [postId]\n        } : {});\n    }, [currentTags, postId]);\n\n    return (\n        <BlockControls>\n            <ToolbarButton\n                icon=\"admin-links\"\n                title=\"Internal link\"\n                onClick={() => {\n                    onChange(\n                        toggleFormat(value, {\n                            type: 'mve-timeline/internal-link',\n                        })\n                    );\n                }}\n                isActive={isActive}\n            />\n            {isActive && pages && <Popover anchor={popoverAnchor} variant=\"toolbar\"><Card><CardBody>\n                <MyPageList pages={pages} value={activeAttributes?.name} onChange={(newValue) => {\n                    const changed = applyFormat(value, {\n                        type: 'mve-timeline/internal-link',\n                        attributes: {\n                            name: newValue\n                        }\n                    });\n                    onChange(changed);\n                }} />\n            </CardBody></Card>\n            </Popover>}\n        </BlockControls>\n    );\n};\n\n// const MyCustomButton2 = ({ isActive, onChange, value, activeAttributes }) => {\n\n//     const selectedBlock = useSelect((select) => {\n//         return select('core/block-editor').getSelectedBlock();\n//     }, []);\n\n//     if (selectedBlock && selectedBlock.name !== 'core/paragraph') {\n//         return null;\n//     }\n\n//     console.log(selectedBlock.name);\n\n//     return (\n//         <BlockControls>\n//             <ToolbarButton\n//                 icon=\"editor-code\"\n//                 title=\"Sample output\"\n//                 onClick={() => {\n//                     onChange(\n//                         toggleFormat(value, {\n//                             type: 'my-custom-format/sample-output',\n//                         })\n//                     );\n//                 }}\n//                 isActive={isActive}\n//             />\n//             {isActive && <Popover variant=\"toolbar\">\n//                 <URLInput value={activeAttributes.name ?? ''} onChange={(url, post) => {\n//                     const newVal = applyFormat(value, {\n//                         type: 'my-custom-format/sample-output',\n//                         attributes: {\n//                             name: url\n//                         }\n//                     });\n//                     console.log(newVal);\n//                     console.log(url);\n//                     console.log(post);\n//                     onChange(newVal);\n//                 }} />\n//             </Popover>}\n//         </BlockControls>\n//     );\n// };\n\nregisterFormatType('mve-timeline/internal-link', {\n    title: 'Internal link',\n    tagName: 'a',\n    className: 'mve-internal-link',\n    attributes: {\n        name: 'data-internal-id',\n    },\n    edit: MyCustomButton\n});\n\n//addFilter('editor.BlockEdit', 'mve-timeline/link', InternalLink);"],"names":["registerPlugin","PluginDocumentSettingPanel","PanelRow","TextControl","SelectControl","Button","ResponsiveWrapper","__experimentalText","Text","__experimentalVStack","VStack","__experimentalHStack","HStack","ToolbarButton","Popover","Card","CardBody","CheckboxControl","useSelect","useDispatch","subscribe","select","dispatch","useEntityProp","MediaUpload","MediaUploadCheck","BlockControls","RichText","registerFormatType","toggleFormat","applyFormat","useState","wp","domReady","locked","requiredMeta","getEditedPostAttribute","tag","mve_timeline_year","length","lockPostSaving","unlockPostSaving","render","_meta$mve_timeline_ye","_meta$mve_timeline_ye2","_meta$mve_timeline_im","_meta$mve_timeline_im2","_meta$mve_timeline_co","postType","getCurrentPostType","postId","getCurrentPostId","editEntityRecord","meta","setMeta","linkName","setLinkName","linkUrl","setLinkUrl","valueYear","valueYearEnd","updateYear","newValue","parseInt","isNaN","toString","updateYearEnd","mve_timeline_year_end","imageId","imageSource","imageInfo","intro","hasContent","links","JSON","parse","addLink","push","name","url","mve_timeline_links","stringify","removeLink","valueToRemove","newLinks","val","updateIntro","mve_timeline_intro","updateImageId","obj","mve_timeline_image","id","mve_timeline_image_src","sizes","mve_timeline_image_source","mve_timeline_image_info","updateImageSource","updateImageInfo","updateHasContent","mve_timeline_content","tags","getEntityRecords","orderBy","currentTags","updateTimeline","value","image","getMedia","options","label","map","panelStyle","backgroundColor","padding","width","requiredMissingStyle","color","createElement","title","initialOpen","style","onChange","checked","upperCase","onSelect","allowedTypes","open","Fragment","display","naturalWidth","media_details","naturalHeight","height","src","source_url","variant","onClick","isLink","isDestructive","placeholder","allowedFormats","overflowX","listStyleType","margin","link","key","whiteSpace","size","disabled","MyPageList","pages","minWidth","__nextHasNoMarginBottom","page","raw","MyCustomButton","isActive","activeAttributes","contentRef","popoverAnchor","setPopoverAnchor","current","allowedBlocks","selectedBlock","getSelectedBlock","includes","icon","type","anchor","changed","attributes","tagName","className","edit"],"sourceRoot":""}