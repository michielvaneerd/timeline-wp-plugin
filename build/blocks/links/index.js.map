{"version":3,"file":"blocks/links/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACrB;AACW;AACS;AACG;AACgC;AAGxFA,oEAAiB,CAAC,oBAAoB,EAAE;EACpCS,IAAI,EAAEA,CAAC;IAAEC,aAAa;IAAEC;EAAW,CAAC,KAAK;IACrC,MAAMC,UAAU,GAAGR,sEAAa,CAAC,CAAC;IAClC,MAAMS,QAAQ,GAAGX,0DAAS,CACrBY,MAAM,IAAKA,MAAM,CAAC,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC,EACtD,EACJ,CAAC;IACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,+CAAQ,CAAC,EAAE,CAAC;IAEtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGhB,mEAAa,CAAC,UAAU,EAAEU,QAAQ,EAAE,MAAM,CAAC;IAEnE,IAAIO,cAAc,GAAGF,IAAI,CAAC,oBAAoB,CAAC;IAC/C,IAAI,CAACE,cAAc,EAAE;MACjBA,cAAc,GAAG,EAAE;IACvB,CAAC,MAAM;MACHA,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACF,cAAc,CAAC;IAC/C;IACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACvBH,cAAc,CAACI,IAAI,CAACR,KAAK,CAAC;MAC1BG,OAAO,CAAC;QAAC,GAAGD,IAAI;QAAEO,kBAAkB,EAAEJ,IAAI,CAACK,SAAS,CAACN,cAAc;MAAC,CAAC,CAAC;MACtEH,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC;IACD,MAAMU,eAAe,GAAIC,aAAa,IAAK;MACvC,MAAMC,KAAK,GAAGT,cAAc,CAACU,OAAO,CAACF,aAAa,CAAC;MACnD,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;QACZT,cAAc,CAACW,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;QAC/BV,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAEO,kBAAkB,EAAEJ,IAAI,CAACK,SAAS,CAACN,cAAc;QAAC,CAAC,CAAC;MAC1E;IACJ,CAAC;IAED,OACIY,oDAAA;MAAA,GAASpB;IAAU,GACfoB,oDAAA,CAAC1B,qEAAI;MAAC2B,SAAS,EAAE;IAAK,GAAC,OAAW,CAAC,EACnCD,oDAAA,aACKZ,cAAc,CAACc,GAAG,CAAEC,IAAI,IACrBH,oDAAA;MAAII,GAAG,EAAED;IAAK,GAAEA,IAAI,EACpBH,oDAAA,CAACxB,yDAAM;MAAC6B,aAAa;MAACC,IAAI,EAAC,OAAO;MAACC,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACQ,IAAI;IAAE,GAAC,GAAS,CAC9E,CACP,CACD,CAAC,EACLH,oDAAA,CAACzB,8DAAW;MAACS,KAAK,EAAEA,KAAM;MAACwB,QAAQ,EAAGC,QAAQ,IAAKxB,QAAQ,CAACwB,QAAQ;IAAE,CAAE,CAAC,EACzET,oDAAA,CAACxB,yDAAM;MAAC8B,IAAI,EAAC,OAAO;MAACI,OAAO,EAAC,WAAW;MAACH,OAAO,EAAEhB;IAAa,GAAC,UAAgB,CAC/E,CAAC;EAEd,CAAC;EAED;EACA;EACAoB,IAAI,EAAEA,CAAA,KAAM;IACR,OAAO,IAAI;EACf;AACJ,CAAC,CAAC,C","sources":["webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"blocks\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/blocks/links/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useState } from 'react';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { __experimentalText as Text, TextControl, Button } from '@wordpress/components';\n\n\nregisterBlockType('mve-timeline/links', {\n    edit: ({ setAttributes, attributes }) => {\n        const blockProps = useBlockProps();\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n        const [value, setValue] = useState('');\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        let metaFieldValue = meta['mve_timeline_links'];\n        if (!metaFieldValue) {\n            metaFieldValue = [];\n        } else {\n            metaFieldValue = JSON.parse(metaFieldValue);\n        }\n        const addMetaValue = () => {\n            metaFieldValue.push(value);\n            setMeta({...meta, mve_timeline_links: JSON.stringify(metaFieldValue)});\n            setValue('');\n        };\n        const removeMetaValue = (valueToRemove) => {\n            const index = metaFieldValue.indexOf(valueToRemove);\n            if (index > -1) {\n                metaFieldValue.splice(index, 1);\n                setMeta({...meta, mve_timeline_links: JSON.stringify(metaFieldValue)});\n            }\n        };\n\n        return (\n            <div {...blockProps}>\n                <Text upperCase={true}>Links</Text>\n                <ul>\n                    {metaFieldValue.map((link) => (\n                        <li key={link}>{link}\n                        <Button isDestructive size=\"small\" onClick={() => removeMetaValue(link)}>X</Button>\n                        </li>\n                    ))}\n                </ul>\n                <TextControl value={value} onChange={(newValue) => setValue(newValue)} />\n                <Button size=\"small\" variant=\"secondary\" onClick={addMetaValue}>Add link</Button>\n            </div>\n        );\n    },\n\n    // No information saved to the block.\n    // Data is saved to post meta via the hook.\n    save: () => {\n        return null;\n    },\n});"],"names":["registerBlockType","useState","useSelect","useEntityProp","useBlockProps","__experimentalText","Text","TextControl","Button","edit","setAttributes","attributes","blockProps","postType","select","getCurrentPostType","value","setValue","meta","setMeta","metaFieldValue","JSON","parse","addMetaValue","push","mve_timeline_links","stringify","removeMetaValue","valueToRemove","index","indexOf","splice","createElement","upperCase","map","link","key","isDestructive","size","onClick","onChange","newValue","variant","save"],"sourceRoot":""}