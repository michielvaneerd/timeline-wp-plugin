{"version":3,"file":"blocks/links/index.js","mappings":"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","sources":["webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"blocks\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/blocks/links/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useState } from 'react';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { __experimentalText as Text, TextControl, Button, Card, CardBody, CardHeader, __experimentalHeading as Heading } from '@wordpress/components';\n\n\nregisterBlockType('mve-timeline/links', {\n    edit: ({ setAttributes, attributes }) => {\n        const blockProps = useBlockProps();\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n        const [valueName, setValueName] = useState('');\n        const [valueUrl, setValueUrl] = useState('');\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        let metaFieldValue = meta['mve_timeline_links'];\n        if (!metaFieldValue) {\n            metaFieldValue = [];\n        } else {\n            metaFieldValue = JSON.parse(metaFieldValue); // [{\"name\": \"\", \"url\": \"\"}]\n        }\n        const addMetaValue = () => {\n            metaFieldValue.push({\n                name: valueName,\n                url: valueUrl\n            });\n            setMeta({ ...meta, mve_timeline_links: JSON.stringify(metaFieldValue) });\n            setValueName('');\n            setValueUrl('');\n        };\n        const removeLink = (valueToRemove) => {\n            const newMetaFieldValue = [];\n            for (const val of metaFieldValue) {\n                if (val.name === valueToRemove.name && val.url === valueToRemove.url) {\n\n                } else {\n                    newMetaFieldValue.push(val);\n                }\n            }\n            setMeta({ ...meta, mve_timeline_links: JSON.stringify(newMetaFieldValue) });\n        };\n\n        return (\n            <Card {...blockProps}>\n                <CardHeader>\n                    <Heading level={4}>Links</Heading>\n                </CardHeader>\n                <CardBody>\n                    <ul style={{ overflowX: 'auto', listStyleType: 'none', padding: 0, margin: 0, marginBottom: '1rem' }}>\n                        {metaFieldValue.map((link) => (\n                            <li key={link.url} style={{ whiteSpace: 'nowrap' }}><Button isDestructive size=\"small\" onClick={() => removeLink(link)}>X</Button> {link.name} - {link.url}</li>\n                        ))}\n                    </ul>\n\n                    <TextControl value={valueName} onChange={(newValue) => setValueName(newValue)} label=\"Title\" />\n                    <TextControl value={valueUrl} onChange={(newValue) => setValueUrl(newValue)} label=\"URL\" />\n                    <Button size=\"small\" variant=\"secondary\" onClick={addMetaValue} disabled={!(valueName && valueUrl)}>Add link</Button>\n                </CardBody>\n            </Card>\n        );\n    },\n\n    // No information saved to the block.\n    // Data is saved to post meta via the hook.\n    save: () => {\n        return null;\n    },\n});"],"names":["registerBlockType","useState","useSelect","useEntityProp","useBlockProps","__experimentalText","Text","TextControl","Button","Card","CardBody","CardHeader","__experimentalHeading","Heading","edit","setAttributes","attributes","blockProps","postType","select","getCurrentPostType","valueName","setValueName","valueUrl","setValueUrl","meta","setMeta","metaFieldValue","JSON","parse","addMetaValue","push","name","url","mve_timeline_links","stringify","removeLink","valueToRemove","newMetaFieldValue","val","createElement","level","style","overflowX","listStyleType","padding","margin","marginBottom","map","link","key","whiteSpace","isDestructive","size","onClick","value","onChange","newValue","label","variant","disabled","save"],"sourceRoot":""}