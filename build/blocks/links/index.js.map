{"version":3,"file":"blocks/links/index.js","mappings":"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","sources":["webpack://mve-timeline/./src/shared/links.js","webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"blocks\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/blocks/links/index.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { __experimentalText as Text, TextControl, Button, Card, CardBody, CardHeader, __experimentalHeading as Heading } from '@wordpress/components'\n\nlet _meta, _setMeta, metaFieldValue = null;\n\nexport const init = function (meta, setMeta) {\n    _meta = meta;\n    _setMeta = setMeta;\n    metaFieldValue = meta['mve_timeline_links'];\n    if (!metaFieldValue) {\n        metaFieldValue = [];\n    } else {\n        metaFieldValue = JSON.parse(metaFieldValue); // [{\"name\": \"\", \"url\": \"\"}]\n    }\n};\n\nexport const Widget = function () {\n\n    const [valueName, setValueName] = useState('');\n    const [valueUrl, setValueUrl] = useState('');\n\n    const addMetaValue = () => {\n        metaFieldValue.push({\n            name: valueName,\n            url: valueUrl\n        });\n        _setMeta({ ..._meta, mve_timeline_links: JSON.stringify(metaFieldValue) });\n        setValueName('');\n        setValueUrl('');\n    };\n\n    const removeLink = (valueToRemove) => {\n        const newMetaFieldValue = [];\n        for (const val of metaFieldValue) {\n            if (val.name === valueToRemove.name && val.url === valueToRemove.url) {\n\n            } else {\n                newMetaFieldValue.push(val);\n            }\n        }\n        _setMeta({ ..._meta, mve_timeline_links: JSON.stringify(newMetaFieldValue) });\n    };\n\n    return (\n        <><ul style={{ overflowX: 'auto', listStyleType: 'none', padding: 0, margin: 0, marginBottom: '1rem' }}>\n            {metaFieldValue.map((link) => (\n                <li key={link.url} style={{ whiteSpace: 'nowrap' }}><Button isDestructive size=\"small\" onClick={() => removeLink(link)}>X</Button> {link.name} - {link.url}</li>\n            ))}\n        </ul>\n\n            <TextControl value={valueName} onChange={(newValue) => setValueName(newValue)} label=\"Title\" />\n            <TextControl value={valueUrl} onChange={(newValue) => setValueUrl(newValue)} label=\"URL\" />\n            <Button size=\"small\" variant=\"secondary\" onClick={addMetaValue} disabled={!(valueName && valueUrl)}>Add link</Button></>\n    );\n};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { Card, CardBody, CardHeader, __experimentalHeading as Heading } from '@wordpress/components';\nimport { init as initLinks, Widget as LinksWidget } from '../../shared/links.js';\n\nregisterBlockType('mve-timeline/links', {\n    edit: ({ setAttributes, attributes }) => {\n        const blockProps = useBlockProps();\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        initLinks(meta, setMeta);\n\n        return (\n            <Card {...blockProps}>\n                <CardHeader>\n                    <Heading level={4}>Links</Heading>\n                </CardHeader>\n                <CardBody>\n                    <LinksWidget />\n                </CardBody>\n            </Card>\n        );\n    },\n\n    // No information saved to the block.\n    // Data is saved to post meta via the hook.\n    save: () => {\n        return null;\n    },\n});"],"names":["useState","useSelect","useEntityProp","useBlockProps","__experimentalText","Text","TextControl","Button","Card","CardBody","CardHeader","__experimentalHeading","Heading","_meta","_setMeta","metaFieldValue","init","meta","setMeta","JSON","parse","Widget","valueName","setValueName","valueUrl","setValueUrl","addMetaValue","push","name","url","mve_timeline_links","stringify","removeLink","valueToRemove","newMetaFieldValue","val","createElement","Fragment","style","overflowX","listStyleType","padding","margin","marginBottom","map","link","key","whiteSpace","isDestructive","size","onClick","value","onChange","newValue","label","variant","disabled","registerBlockType","initLinks","LinksWidget","edit","setAttributes","attributes","blockProps","postType","select","getCurrentPostType","level","save"],"sourceRoot":""}