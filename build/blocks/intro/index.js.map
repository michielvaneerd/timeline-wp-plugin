{"version":3,"file":"blocks/intro/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAmD;AAEnD,IAAIC,KAAK;EAAEC,QAAQ;EAAEC,cAAc,GAAG,IAAI;AAE1C,MAAMC,eAAe,GAAIC,QAAQ,IAAK;EAClCH,QAAQ,CAAC;IAAE,GAAGD,KAAK;IAAEK,kBAAkB,EAAED;EAAS,CAAC,CAAC;AACxD,CAAC;AAEM,MAAME,IAAI,GAAG,SAAAA,CAAUC,IAAI,EAAEC,OAAO,EAAE;EACzCR,KAAK,GAAGO,IAAI;EACZN,QAAQ,GAAGO,OAAO;EAClBN,cAAc,GAAGK,IAAI,CAAC,oBAAoB,CAAC;AAC/C,CAAC;AAEM,MAAME,MAAM,GAAG,SAAAA,CAAA,EAAY;EAC9B,OACIC,oDAAA,CAACX,6DAAQ;IACLY,WAAW,EAAC,UAAU;IACtBC,cAAc,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,4BAA4B,CAAE;IAC3EC,KAAK,EAAC,oBAAoB;IAC1BC,KAAK,EAAEZ,cAAe;IACtBa,QAAQ,EAAEZ,eAAgB;IAC1Ba,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAoB;EAAE,CACrF,CAAC;AAEV,CAAC;;;;;;;;;;ACzBD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACV;AACS;AACG;AAC6C;AACpB;AAEjFC,oEAAiB,CAAC,oBAAoB,EAAE;EACpCW,IAAI,EAAEA,CAAC;IAAEC,aAAa;IAAEC;EAAW,CAAC,KAAK;IACrC,MAAMC,UAAU,GAAGX,sEAAa,CAAC,CAAC;IAClC,MAAMY,QAAQ,GAAGd,0DAAS,CACrBe,MAAM,IAAKA,MAAM,CAAC,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC,EACtD,EACJ,CAAC;IAED,MAAM,CAAC9B,IAAI,EAAEC,OAAO,CAAC,GAAGc,mEAAa,CAAC,UAAU,EAAEa,QAAQ,EAAE,MAAM,CAAC;IAEnEN,sDAAS,CAACtB,IAAI,EAAEC,OAAO,CAAC;IAExB,OACIE,oDAAA,CAACc,uDAAI;MAAA,GAAKU;IAAU,GAChBxB,oDAAA,CAACgB,6DAAU,QACPhB,oDAAA,CAACkB,wEAAO;MAACU,KAAK,EAAE;IAAE,GAAC,OAAc,CACzB,CAAC,EACb5B,oDAAA,CAACe,2DAAQ,QACLf,oDAAA,CAACoB,oDAAW,MAAE,CACR,CACR,CAAC;EAEf,CAAC;EAED;EACA;EACAS,IAAI,EAAEA,CAAA,KAAM;IACR,OAAO,IAAI;EACf;AACJ,CAAC,CAAC,C","sources":["webpack://mve-timeline/./src/shared/intro.js","webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"blocks\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/blocks/intro/index.js"],"sourcesContent":["import { RichText } from '@wordpress/block-editor';\n\nlet _meta, _setMeta, metaFieldValue = null;\n\nconst updateMetaValue = (newValue) => {\n    _setMeta({ ..._meta, mve_timeline_intro: newValue });\n};\n\nexport const init = function (meta, setMeta) {\n    _meta = meta;\n    _setMeta = setMeta;\n    metaFieldValue = meta['mve_timeline_intro'];\n};\n\nexport const Widget = function () {\n    return (\n        <RichText\n            placeholder=\"Intro...\"\n            allowedFormats={['core/bold', 'core/italic', 'mve-timeline/internal-link']}\n            label=\"MVE Timeline Intro\"\n            value={metaFieldValue}\n            onChange={updateMetaValue}\n            style={{ backgroundColor: 'white', padding: '1rem', border: '1px solid #C0C0C0' }}\n        />\n    );\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { Card, CardBody, CardHeader, __experimentalHeading as Heading } from '@wordpress/components';\nimport { init as initIntro, Widget as IntroWidget } from '../../shared/intro.js';\n\nregisterBlockType('mve-timeline/intro', {\n    edit: ({ setAttributes, attributes }) => {\n        const blockProps = useBlockProps();\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        initIntro(meta, setMeta);\n\n        return (\n            <Card {...blockProps}>\n                <CardHeader>\n                    <Heading level={4}>Intro</Heading>\n                </CardHeader>\n                <CardBody>\n                    <IntroWidget />\n                </CardBody>\n            </Card>\n        );\n    },\n\n    // No information saved to the block.\n    // Data is saved to post meta via the hook.\n    save: () => {\n        return null;\n    },\n});"],"names":["RichText","_meta","_setMeta","metaFieldValue","updateMetaValue","newValue","mve_timeline_intro","init","meta","setMeta","Widget","createElement","placeholder","allowedFormats","label","value","onChange","style","backgroundColor","padding","border","registerBlockType","useSelect","useEntityProp","useBlockProps","Card","CardBody","CardHeader","__experimentalHeading","Heading","initIntro","IntroWidget","edit","setAttributes","attributes","blockProps","postType","select","getCurrentPostType","level","save"],"sourceRoot":""}