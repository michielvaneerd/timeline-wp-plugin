{"version":3,"file":"blocks/intro/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACV;AACS;AACa;AAC+D;AAGjIA,oEAAiB,CAAC,oBAAoB,EAAE;EACpCY,IAAI,EAAEA,CAAC;IAAEC,aAAa;IAAEC;EAAW,CAAC,KAAK;IACrC,MAAMC,UAAU,GAAGZ,sEAAa,CAAC,CAAC;IAClC,MAAMa,QAAQ,GAAGf,0DAAS,CACrBgB,MAAM,IAAKA,MAAM,CAAC,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC,EACtD,EACJ,CAAC;IAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,mEAAa,CAAC,UAAU,EAAEc,QAAQ,EAAE,MAAM,CAAC;IAEnE,MAAMK,cAAc,GAAGF,IAAI,CAAC,oBAAoB,CAAC;IACjD,MAAMG,eAAe,GAAIC,QAAQ,IAAK;MAClCH,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEK,kBAAkB,EAAED;MAAS,CAAC,CAAC;IACtD,CAAC;IAED,OACIE,oDAAA,CAAClB,uDAAI;MAAA,GAAKQ;IAAU,GAChBU,oDAAA,CAAChB,6DAAU,QACPgB,oDAAA,CAACd,wEAAO;MAACe,KAAK,EAAE;IAAE,GAAC,OAAc,CACzB,CAAC,EACbD,oDAAA,CAACjB,2DAAQ,QACTiB,oDAAA,CAACrB,6DAAQ;MACLuB,WAAW,EAAC,UAAU;MACtBC,cAAc,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,4BAA4B,CAAE;MAC3EC,KAAK,EAAC,oBAAoB;MAC1BC,KAAK,EAAET,cAAe;MACtBU,QAAQ,EAAET,eAAgB;MAC1BU,KAAK,EAAE;QAACC,eAAe,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAmB;IAAE,CACnF,CACS,CACR,CAAC;EAEf,CAAC;EAED;EACA;EACAC,IAAI,EAAEA,CAAA,KAAM;IACR,OAAO,IAAI;EACf;AACJ,CAAC,CAAC,C","sources":["webpack://mve-timeline/external window \"React\"","webpack://mve-timeline/external window [\"wp\",\"blockEditor\"]","webpack://mve-timeline/external window [\"wp\",\"blocks\"]","webpack://mve-timeline/external window [\"wp\",\"components\"]","webpack://mve-timeline/external window [\"wp\",\"coreData\"]","webpack://mve-timeline/external window [\"wp\",\"data\"]","webpack://mve-timeline/webpack/bootstrap","webpack://mve-timeline/webpack/runtime/compat get default export","webpack://mve-timeline/webpack/runtime/define property getters","webpack://mve-timeline/webpack/runtime/hasOwnProperty shorthand","webpack://mve-timeline/webpack/runtime/make namespace object","webpack://mve-timeline/./src/blocks/intro/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport { __experimentalText as Text, Card, CardBody, CardHeader, __experimentalHeading as Heading } from '@wordpress/components';\n\n\nregisterBlockType('mve-timeline/intro', {\n    edit: ({ setAttributes, attributes }) => {\n        const blockProps = useBlockProps();\n        const postType = useSelect(\n            (select) => select('core/editor').getCurrentPostType(),\n            []\n        );\n\n        const [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n        const metaFieldValue = meta['mve_timeline_intro'];\n        const updateMetaValue = (newValue) => {\n            setMeta({ ...meta, mve_timeline_intro: newValue });\n        };\n\n        return (\n            <Card {...blockProps}>\n                <CardHeader>\n                    <Heading level={4}>Intro</Heading>\n                </CardHeader>\n                <CardBody>\n                <RichText\n                    placeholder=\"Intro...\"\n                    allowedFormats={['core/bold', 'core/italic', 'mve-timeline/internal-link']}\n                    label=\"MVE Timeline Intro\"\n                    value={metaFieldValue}\n                    onChange={updateMetaValue}\n                    style={{backgroundColor: 'white', padding: '1rem', border: '1px solid #C0C0C0'}}\n                />\n                </CardBody>\n            </Card>\n        );\n    },\n\n    // No information saved to the block.\n    // Data is saved to post meta via the hook.\n    save: () => {\n        return null;\n    },\n});"],"names":["registerBlockType","useSelect","useEntityProp","useBlockProps","RichText","__experimentalText","Text","Card","CardBody","CardHeader","__experimentalHeading","Heading","edit","setAttributes","attributes","blockProps","postType","select","getCurrentPostType","meta","setMeta","metaFieldValue","updateMetaValue","newValue","mve_timeline_intro","createElement","level","placeholder","allowedFormats","label","value","onChange","style","backgroundColor","padding","border","save"],"sourceRoot":""}